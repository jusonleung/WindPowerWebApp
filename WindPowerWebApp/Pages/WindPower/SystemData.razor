@inject SqlDbService sqlDbService
@inject ExcelService excelService
@inject Microsoft.JSInterop.IJSRuntime JS

@page "/SystemData"


<button class="btn btn-primary" @onclick="@CreateExcel">Download</button>
<br />
<Table TItem="DataModel"
       DataSource="@data"
       Total="_total"
       @bind-PageIndex="_pageIndex"
       @bind-PageSize="_pageSize">
    <PropertyColumn Property="c=>c.DateTime" Sortable Format="yyyy-MM-dd HH:mm:ss"/>
    <PropertyColumn Title="Voltage" Property="c=>c.Voltage" Sortable>
        <CellRender Context="cell">@(cell.FieldValue == default ? "--" : cell.FieldValue.ToString()+'V')</CellRender>
    </PropertyColumn>
    <PropertyColumn Title="Current" Property="c=>c.Current" Sortable>
        <CellRender Context="cell">@(cell.FieldValue == default ? "--" : cell.FieldValue.ToString()+'A')</CellRender>
    </PropertyColumn>
    <PropertyColumn Title="Power" Property="c=>c.Current*c.Voltage" Sortable>
        <CellRender Context="cell">@(cell.FieldValue == default ? "--" : cell.FieldValue.ToString()+'W')</CellRender>
    </PropertyColumn>
    <PropertyColumn Title="Revolutions per minute" Property="c=>c.RPM" Sortable>
        <CellRender Context="cell">@(cell.FieldValue == default ? "--" : cell.FieldValue.ToString()+"rpm")</CellRender>
    </PropertyColumn>
    <PropertyColumn Title="WindSpeed" Property="c=>c.WindSpeed" Sortable>
        <CellRender Context="cell">@(cell.FieldValue == default ? "--" : cell.FieldValue.ToString()+"m/s")</CellRender>
    </PropertyColumn>
</Table>

@code {
    List<DataModel> data;

    ITable table;

    int _pageIndex = 1;
    int _pageSize = 20;
    int _total = 0;

    protected override void OnInitialized()
    {
        data = sqlDbService.GetAllSystemData();
        _total = data.Count;
    }

    MemoryStream excelStream;

    /// <summary>
    /// Create and download the Excel document.
    /// </summary>
    protected async void CreateExcel()
    {
        excelStream = excelService.CreateExcel(data);
        await JS.SaveAs("SystemData.xlsx", excelStream.ToArray());
    }
}
